---
   - name: Atualiza a cache (equivalente a apt update)
     apt:
       update_cache: true
       cache_valid_time: 3600

   - name: "Atualiza o sistema operativo"
     apt:
       upgrade: safe

   - name: "Instalar as dependencias necessária ao programa leantime"
     apt:
       pkg:
       - mc
       - screen
       - git
       - apache2
       - mysql-server
       - php
       - php-mysql
       - php-ldap
       - php-cli
       - php-soap
       - php-json
       - graphviz
       - php-xml
       - php-gd
       - php-zip
       - libapache2-mod-php
       - php-dev
       - libmcrypt-dev
       - gcc
       - make
       - autoconf
       - libc-dev
       - pkg-config
       - pwgen
       - curl
       - unzip
       - zip
       - php-mbstring
       - expect
       - net-tools
       - python3-mysqldb
       - python3-apt
       - python3-pycurl

   # Fonte de inspiração: https://docs.ansible.com/ansible/latest/collections/ansible/builtin/service_module.html
   - name: "Instala o serviço apache2 no arranque do sistema"
     service:
       name: apache2
       state: started
       enabled: true

   # Fonte: https://www.mydailytutorials.com/using-ansible-find-module-search-filesfolder
   - name: "Rotina Auxiliar: Procura o caminho do ficheiro php.ini do servidor apache2"
     find:
       paths: /etc
       patterns: "php.ini"
       recurse: true
     register: caminho_php_ini

   # Fonte: https://docs.ansible.com/ansible/latest/collections/ansible/builtin/lineinfile_module.html
   - name: "Ativa várias opções no ficheiro php.ini, utilizando o módulo lineinfile."
     ansible.builtin.lineinfile:
       path: "{{ caminho_php_ini.files[0].path }}"
       regexp: "{{ item.regexp  }}"
       line: "{{ item.line }}"
     with_items:
       - regexp: "^file_uploads"
         line: "file_uploads = 1"
       - regexp: "^upload_max_filesize"
         line: "upload_max_filesize = 1G"
       - regexp: "^max_file_uploads"
         line: "max_file_uploads = 20"
       - regexp: "^post_max_size"
         line: "post_max_size = 2G"
       - regexp: "^memory_limit"
         line: "memory_limit = 2G"
       - regexp: "^max_input_time"
         line: "max_input_time = 3600"

   # Fonte: https://docs.ansible.com/ansible/2.7/modules/file_module.html
   - name: Cria a directoria temporária leantime e a directoria de apache leantime
     file:
       path: "{{ item.path }}"
       state: directory
       mode: 0755
       owner: www-data
       group: www-data
     with_items:
       - path: "/tmp/leantime"
       - path: "/var/www/leantime"

   # Fonte: Ansible for DevOps - Server and configuration management for humans de Jeff Geerling, página 98
   - name: "Cria a base de dados de mysql para o leantime"
     mysql_db: "db=leantime_database state=present"

   - name: "Cria o utilizador para a base de dados leantime"
     no_log: true
     mysql_user:
       name: "{{ login_leantime }}"
       password: "{{ password_leantime }}"
       priv: "leantime_database.*:ALL"
       host: localhost
       state: present

   - name: "Cria o utilizador para a base de dados leantime"
     no_log: true
     mysql_user:
       name: "{{ login_leantime }}"
       password: "{{ password_leantime }}"
       priv: "leantime_database.*:ALL"
       host: localhost
       state: present

   - name: "Faz o download do software leantime a partir do repositório git"
     get_url:
       url: https://github.com/Leantime/leantime/releases/download/{{ versao_leantime }}/Leantime-{{ versao_leantime }}.zip
       dest: /tmp/leantime
       mode: 0755

   # O ficheiro Leantime-versao.zip necessita de ser descomprimido
   - name: Descomprime o software leantime
     unarchive:
       src: "/tmp/leantime/Leantime-{{ versao_leantime }}.zip"
       dest: "/var/www/leantime"
       owner: www-data
       group: www-data
       mode: 0755
       remote_src: true

   # Após a descompressão, se o ficheiro configuration.php não existir, este necessita de ser
   # criado a partir do ficheiro configuration.sample.php
   # Fonte: https://docs.ansible.com/ansible/latest/collections/ansible/builtin/copy_module.html
   - name: Copia o ficheiro de configuração configuration.sample.php
     ansible.builtin.copy:
       src: /var/www/leantime/config/configuration.sample.php
       dest: /var/www/leantime/config/configuration.php
       owner: www-data
       group: www-data
       mode: '0755'
       remote_src: true
       force: false

   # Fonte: https://docs.ansible.com/ansible/latest/collections/ansible/builtin/replace_module.html
   - name: Altera as variáveis dbuser, dbpassword e dbdatabase no ficheiro configuration.php utilizando o módulo replace.
     ansible.builtin.replace:
       path: /var/www/leantime/config/configuration.php
       regexp: "{{ item.regexp  }}"
       replace: "{{ item.line }}"
     with_items:
       - regexp: 'dbUser=""'
         line: 'dbUser="{{ login_leantime }}"'
       - regexp: 'dbDatabase=""'
         line: 'dbDatabase="leantime_database"'
       - regexp: 'dbPassword=""'
         line: 'dbPassword="{{ password_leantime }}"'

   # Fonte: https://docs.ansible.com/ansible/latest/collections/ansible/builtin/template_module.html
   - name: Copia o template do site para a pásta /etc/apache2/sites-available
     ansible.builtin.template:
       src: leantime.template.j2
       dest: /etc/apache2/sites-available/leantime.conf
       owner: root
       group: www-data
       mode: 0644
       force: false

   # Fonte: https://docs.ansible.com/ansible/latest/collections/ansible/builtin/file_module.html
   - name: "Cria um link simbólico para o ficheiro leantime.conf na pasta /etc/apache/sites-enabled"
     ansible.builtin.file:
       src: /etc/apache2/sites-available/leantime.conf
       dest: /etc/apache2/sites-enabled/leantime.conf
       state: link

   # Fonte: https://docs.ansible.com/ansible/latest/collections/ansible/builtin/file_module.html
   - name: "Cria um link simbólico para o ficheiro leantime.conf na pasta /etc/apache/sites-enabled"
     ansible.builtin.file:
       path: /etc/apache2/sites-available/leantime.conf
       owner: root
       group: www-data
       mode: '0777'

   - name: "Apaga o link 000-default.conf na pasta sites-enabled do apache2"
     ansible.builtin.file:
       path: /etc/apache2/sites-enabled/000-default.conf
       state: absent

   - name: "Activa o módulo mod_rewrite no apache"
     apache2_module:
       name: rewrite
       state: present

   # Tarefa: Criar o administrador da aplicação leantime
   - name: "Cria o administrador da aplicação leantime"
     uri:
       url: http://localhost/install
       method: POST
       body_format: form-urlencoded
       body:
         email: "{{ login_website }}"
         password: "{{ password_website }}"
         firstname: "{{ first_name_website }}"
         lastname: "{{ last_name_website }}"
         company: "{{ company_website }}"
         install: Install
       status_code: 200
     register: login
